{"version":3,"sources":["chess_pictures.js","chess_board1.js","index.js"],"names":["ChessPictures","black_army","commander","pawn","white_army","chess_board1","state","size","printChessBoard","cell_style","board","i","j","width","height","border","display","backgroundColor","push","style","src","alt","className","parseInt","this","type","min","max","value","onChange","e","setState","target","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.654fbabe.chunk.js","sourcesContent":["const ChessPictures = {\r\n    black_army : {\r\n        commander : [\r\n            \"chess/black_rook.jpg\",\r\n            \"chess/black_knight1.jpg\",\r\n            \"chess/black_bishop.jpg\",\r\n            \"chess/black_queen.jpg\",\r\n            \"chess/black_king.jpg\",\r\n            \"chess/black_bishop.jpg\",\r\n            \"chess/black_knight.jpg\",\r\n            \"chess/black_rook.jpg\"\r\n        ],\r\n        pawn : [\r\n            \"chess/black_pawn.jpg\"\r\n        ]\r\n    },\r\n    white_army : {\r\n        commander : [\r\n            \"chess/white_rook.jpg\",\r\n            \"chess/white_kinght1.jpg\",\r\n            \"chess/white_bishop.jpg\",\r\n            \"chess/white_queen.jpg\",\r\n            \"chess/white_king.jpg\",\r\n            \"chess/white_bishop.jpg\",\r\n            \"chess/white_knight.jpg\",\r\n            \"chess/white_rook.jpg\"\r\n        ],\r\n        pawn : [\r\n            \"chess/white_pawn.jpg\"\r\n        ]\r\n    },\r\n}\r\n\r\nexport default ChessPictures;","import React, { Component } from 'react'\r\nimport ChessPictures from \"./chess_pictures\"\r\nimport \"./bootstrap.min.css\"\r\nimport \"./chess_board.css\"\r\n\r\nexport default class chess_board1 extends Component {\r\n\r\n    state = {\r\n        size: 800\r\n    }\r\n    \r\n    printChessBoard = () => {\r\n        let board =[];\r\n        let cell_style;\r\n        for(let i = 1; i <= 8; i++) {\r\n            for(let j = 1; j <= 8; j++) {\r\n                \r\n                if(i%2 === 1 && j%2 === 1) {      // all odd row & odd column\r\n                    cell_style = {\r\n                        width: (this.state.size/8)+\"px\",\r\n                        height: (this.state.size/8)+\"px\",\r\n                        border: \"1px solid black\",\r\n                        display: \"inline-block\",\r\n                        backgroundColor: \"white\"\r\n                    };\r\n                }\r\n\r\n                if(i%2 === 1 && j%2 === 0) {      // all odd row & even column\r\n                    cell_style = {\r\n                        width: (this.state.size/8)+\"px\",\r\n                        height: (this.state.size/8)+\"px\",\r\n                        border: \"1px solid black\",\r\n                        display: \"inline-block\",\r\n                        backgroundColor: \"black\"\r\n                    };\r\n                }\r\n\r\n                if(i%2 === 0 && j%2 === 1) {      // all even row & odd column\r\n                    cell_style = {\r\n                        width: (this.state.size/8)+\"px\",\r\n                        height: (this.state.size/8)+\"px\",\r\n                        border: \"1px solid black\",\r\n                        display: \"inline-block\",\r\n                        backgroundColor: \"black\"\r\n                    };\r\n                }\r\n\r\n                if(i%2 === 0 && j%2 === 0) {      // all even row & even column\r\n                    cell_style = {\r\n                        width: (this.state.size/8)+\"px\",\r\n                        height: (this.state.size/8)+\"px\",\r\n                        border: \"1px solid black\",\r\n                        display: \"inline-block\",\r\n                        backgroundColor: \"white\"\r\n                    };\r\n                }\r\n\r\n                if(i === 1) {\r\n                    board.push(<div style = {cell_style}><img src={ChessPictures.black_army.commander[j - 1]} alt={ChessPictures.black_army.commander[j - 1]} width={(this.state.size/8)+\"px\"} height={(this.state.size/8)+\"px\"} /></div>);\r\n                }else if(i === 2) {\r\n                    board.push(<div style = {cell_style}><img src={ChessPictures.black_army.pawn[0]} alt={ChessPictures.black_army.pawn[0]} width={(this.state.size/8)+\"px\"} height={(this.state.size/8)+\"px\"} /></div>);\r\n                }else if(i === 7) {\r\n                    board.push(<div style = {cell_style}><img src={ChessPictures.white_army.pawn[0]} alt={ChessPictures.white_army.pawn[0]} width={(this.state.size/8)+\"px\"} height={(this.state.size/8)+\"px\"} /></div>);\r\n                }else if(i === 8) {\r\n                    board.push(<div style = {cell_style}><img src={ChessPictures.white_army.commander[j - 1]} alt={ChessPictures.white_army.commander[j - 1]} width={(this.state.size/8)+\"px\"} height={(this.state.size/8)+\"px\"} /></div>);\r\n                }else {\r\n                    board.push(<div style = {cell_style}><img alt=\"\" /></div>);\r\n                }\r\n                \r\n            }\r\n        }\r\n        return board;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"justify-content-center row\">\r\n                <div style={{\r\n                    width: (parseInt(this.state.size)+6)+\"px\",\r\n                    height: (parseInt(this.state.size)+6)+\"px\",\r\n                    border: \"3px solid black\"\r\n                }}>\r\n                    {this.printChessBoard()}\r\n                </div>\r\n                <div className=\"mt-3 font-weight-bold\">\r\n                    <input type=\"range\" className=\"rotated my-5\" min=\"200\" max=\"800\" value={this.state.size} onChange={(e) => {\r\n                        this.setState({size : e.target.value});\r\n                    }} />\r\n                    <label>Width :<span  className=\"text-danger mx-2\">{this.state.size} px</span></label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport ChessBoard1 from \"./chess_board1\"\r\n\r\nReactDOM.render(<ChessBoard1 />, document.getElementById(\"root\"));"],"sourceRoot":""}